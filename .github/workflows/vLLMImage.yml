name: Build and Export vLLM Docker Image

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Name of the Docker image (without tag)'
        required: true
        default: 'vllm-image'
      image_tag:
        description: 'Tag of the Docker image'
        required: true
        default: 'v1.0'
      tar_name:
        description: 'Name of the tar file (without .tar extension)'
        required: true
        default: 'vllm-image'
      platform:
        description: 'Target platform for the Docker image (amd or arm)'
        required: false
        default: 'amd'

jobs:
  build-and-export:
    runs-on: ubuntu-latest

    steps:
      - name: Clone vLLM Repository
        run: |
          git clone https://github.com/vllm-project/vllm.git
          cd vllm
          git checkout main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine Platform and Dockerfile Path
        id: setup
        working-directory: vllm
        run: |
          PLATFORM_INPUT="${{ github.event.inputs.platform || 'amd' }}"
          if [ "$PLATFORM_INPUT" = "amd" ]; then
            FULL_PLATFORM="linux/amd64"
          elif [ "$PLATFORM_INPUT" = "arm" ]; then
            FULL_PLATFORM="linux/arm64"
          else
            echo "Invalid platform: $PLATFORM_INPUT. Must be 'amd' or 'arm'."
            exit 1
          fi
          echo "full_platform=$FULL_PLATFORM" >> $GITHUB_OUTPUT

          if [ -f "Dockerfile.cpu" ]; then
            echo "dockerfile_path=Dockerfile.cpu" >> $GITHUB_OUTPUT
          elif [ -f "Dockerfile" ]; then
            echo "dockerfile_path=Dockerfile" >> $GITHUB_OUTPUT
          else
            echo "No suitable Dockerfile found in vLLM root directory for platform $PLATFORM_INPUT"
            exit 1
          fi

      - name: Build Docker Image for Selected Platform
        working-directory: vllm
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ steps.setup.outputs.dockerfile_path }}
          platforms: ${{ steps.setup.outputs.full_platform }}
          tags: ${{ github.event.inputs.image_name }}:${{ github.event.inputs.image_tag }}
          push: false
          load: true

      - name: Save Docker Image as Tar
        working-directory: vllm
        run: |
          docker save -o ${{ github.event.inputs.tar_name }}-${{ steps.setup.outputs.full_platform }}.tar ${{ github.event.inputs.image_name }}:${{ github.event.inputs.image_tag }}
          ls -lh ${{ github.event.inputs.tar_name }}-${{ steps.setup.outputs.full_platform }}.tar

      - name: Upload Docker Image Tar as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.tar_name }}-${{ github.event.inputs.image_tag }}-${{ steps.setup.outputs.full_platform }}-tar
          path: vllm/${{ github.event.inputs.tar_name }}-${{ steps.setup.outputs.full_platform }}.tar
          retention-days: 2
